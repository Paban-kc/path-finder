# Generated by Django 4.2.3 on 2024-11-10 13:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('gender', models.CharField(blank=True, choices=[('M', 'male'), ('F', 'female'), ('O', 'other')], max_length=20, null=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now_add=True)),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('photo', models.FileField(blank=True, null=True, upload_to='organization_photos/')),
                ('organization_name', models.CharField(blank=True, max_length=50, null=True)),
                ('industry', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('phone_no', models.CharField(blank=True, max_length=10, null=True)),
                ('alt_phone_no', models.CharField(blank=True, max_length=10, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True)),
                ('organization_documents', models.FileField(blank=True, null=True, upload_to='organization_documents')),
                ('pan_no', models.BigIntegerField(blank=True, null=True)),
                ('vat_no', models.BigIntegerField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='organization_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VacancyField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('salary', models.CharField(blank=True, max_length=225)),
                ('duration', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=2000)),
                ('start_date', models.DateField(auto_now=True)),
                ('location', models.CharField(max_length=255)),
                ('requirements', models.CharField(max_length=2000)),
                ('application_deadline', models.DateField()),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('banner_img', models.FileField(blank=True, null=True, upload_to='')),
                ('job_type', models.CharField(max_length=20)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vacancies', to='auth_common.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('gender', models.CharField(max_length=20)),
                ('phone_no', models.CharField(blank=True, max_length=10, null=True)),
                ('alt_phone', models.CharField(blank=True, max_length=10, null=True)),
                ('university', models.CharField(blank=True, max_length=255, null=True)),
                ('skills', models.TextField(blank=True, null=True)),
                ('photo', models.FileField(blank=True, null=True, upload_to='student_photos/')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('cover_letter', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('git_hub', models.URLField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth_common.organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('supervisor', models.CharField(max_length=255)),
                ('supervisor_phone_no', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(max_length=20)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_common.organization')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_common.student')),
                ('vacancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_common.vacancy')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('date_applied', models.DateField(auto_now=True)),
                ('status', models.CharField(default='pending', max_length=255)),
                ('is_approved', models.BooleanField(default=False)),
                ('student_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_user', to='auth_common.student')),
                ('vacancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='auth_common.vacancy')),
            ],
            options={
                'unique_together': {('student_profile', 'vacancy')},
            },
        ),
    ]
